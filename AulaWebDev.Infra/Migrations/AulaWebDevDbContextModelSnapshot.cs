// <auto-generated />
using System;
using AulaWebDev.Infra.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AulaWebDev.Infra.Migrations
{
    [DbContext(typeof(AulaWebDevDbContext))]
    partial class AulaWebDevDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.7");

            modelBuilder.Entity("AulaWebDev.Dominio.Entidades.Categoria", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<int>("Codigo")
                        .HasColumnType("INTEGER")
                        .HasColumnName("Code");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT")
                        .HasColumnName("Description");

                    b.HasKey("Id");

                    b.ToTable("Category", (string)null);
                });

            modelBuilder.Entity("AulaWebDev.Dominio.Entidades.Cliente", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Documento")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("Document");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("email");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.ToTable("Client", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("66274ed6-1ec8-4394-8e88-452534018e26"),
                            Documento = "01102203344",
                            Email = "jhon.doe@email.com",
                            Nome = "Jhon Doe"
                        });
                });

            modelBuilder.Entity("AulaWebDev.Dominio.Entidades.Pedido", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ClienteId")
                        .HasColumnType("TEXT")
                        .HasColumnName("ClientId");

                    b.Property<DateTime>("DataPedido")
                        .HasColumnType("TEXT")
                        .HasColumnName("Date");

                    b.Property<Guid>("ProdutoId")
                        .HasColumnType("TEXT")
                        .HasColumnName("ProductId");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.HasIndex("ProdutoId");

                    b.ToTable("Order", (string)null);
                });

            modelBuilder.Entity("AulaWebDev.Dominio.Entidades.Produto", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("CategoriaId")
                        .HasColumnType("TEXT")
                        .HasColumnName("CategoriaId");

                    b.Property<int>("Codigo")
                        .HasColumnType("INTEGER")
                        .HasColumnName("Code");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT")
                        .HasColumnName("Description");

                    b.Property<int>("QuantidadeEstoque")
                        .HasColumnType("INTEGER")
                        .HasColumnName("Stock");

                    b.Property<decimal>("Valor")
                        .HasPrecision(10, 2)
                        .HasColumnType("TEXT")
                        .HasColumnName("Price");

                    b.HasKey("Id");

                    b.HasIndex("CategoriaId");

                    b.ToTable("Product", (string)null);
                });

            modelBuilder.Entity("AulaWebDev.Dominio.Entidades.Pedido", b =>
                {
                    b.HasOne("AulaWebDev.Dominio.Entidades.Cliente", "Cliente")
                        .WithMany("Pedidos")
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AulaWebDev.Dominio.Entidades.Produto", "Produto")
                        .WithMany("Pedidos")
                        .HasForeignKey("ProdutoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");

                    b.Navigation("Produto");
                });

            modelBuilder.Entity("AulaWebDev.Dominio.Entidades.Produto", b =>
                {
                    b.HasOne("AulaWebDev.Dominio.Entidades.Categoria", "Categoria")
                        .WithMany("Produtos")
                        .HasForeignKey("CategoriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Categoria");
                });

            modelBuilder.Entity("AulaWebDev.Dominio.Entidades.Categoria", b =>
                {
                    b.Navigation("Produtos");
                });

            modelBuilder.Entity("AulaWebDev.Dominio.Entidades.Cliente", b =>
                {
                    b.Navigation("Pedidos");
                });

            modelBuilder.Entity("AulaWebDev.Dominio.Entidades.Produto", b =>
                {
                    b.Navigation("Pedidos");
                });
#pragma warning restore 612, 618
        }
    }
}
